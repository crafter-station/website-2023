---
import { Image } from "astro:assets"
import Layout from "@/layouts/layout.astro"
import { getI18N, getMetadata } from "@/i18n/utils"
import { Marquee } from "@/components/molecules/marquee"
import { cn } from "@/lib/utils"

const i18n = getI18N(Astro.currentLocale)
const metadata = getMetadata(Astro.currentLocale)

const items = Array.from({ length: 10 }, (_, i) => ({
  src: "/placeholder.svg",
  alt: `Image ${i}`,
  width: 467,
  height: 500,
}))
---

<Layout metadata={metadata.homepage}>
  <main
    class="animate-fade-up flex flex-col gap-10 items-center justify-center min-h-screen px-4 bg-black text-white"
  >
    <section class="text-center flex flex-col gap-4">
      <h1
        class="font-bold text-6xl mb-4 leading-tight"
        set:html={i18n.homepage.welcomeTitle}
      />
      <p class="text-xl text-white/60">
        {i18n.homepage.subtitle}
      </p>
      <p class="text-xl text-white/60" set:html={i18n.homepage.description} />
      <div class="flex space-x-4 justify-center py-4">
        <button
          class={cn(
            "relative inline-flex justify-center font-semibold gap-1 z-0",
            "outline-2 outline-offset-2 outline-neutral-900 dark:outline-neutral-50",
            "focus-visible:outline-2 focus-visible:outline",
            "[text-shadow:_0_1px_2px_rgb(0_0_0_/_15%)]",
            "transition-colors duration-200 ease-in-out",
            "bg-white text-black hover:bg-gray-300 after:from-gray-300",
            "after:[content:''] after:absolute after:rounded-[inherit] after:inset-0 after:z-[-1] after:border after:border-transparent",
            "after:bg-clip-content after:bg-inherit after:shadow-[inset_0_2px_3px_-1px_hsla(0,_0%,_100%,_0.5)]",
            "after:bg-gradient-to-b",
            "border border-gray-600 rounded-md py-3 px-6",
          )}
        >
          {i18n.homepage.callToActionPrimary}
        </button>
        <button
          class="font-semibold border border-white py-3 px-6 rounded-md hover:bg-white/10 transition-colors duration-200 ease-in-out"
        >
          {i18n.homepage.callToActionSecondary}
        </button>
      </div>
    </section>
    <section class="flex flex-col items-center gap-8">
      <span class="text-white/60 flex gap-2 justify-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="icon icon-tabler icon-tabler-cube"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          stroke-width="2"
          stroke="currentColor"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
          ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
            d="M21 16.008v-8.018a1.98 1.98 0 0 0 -1 -1.717l-7 -4.008a2.016 2.016 0 0 0 -2 0l-7 4.008c-.619 .355 -1 1.01 -1 1.718v8.018c0 .709 .381 1.363 1 1.717l7 4.008a2.016 2.016 0 0 0 2 0l7 -4.008c.619 -.355 1 -1.01 1 -1.718z"
          ></path><path d="M12 22v-10"></path><path d="M12 12l8.73 -5.04"
          ></path><path d="M3.27 6.96l8.73 5.04"></path>
        </svg>
        <span class="text-lg font-semibold uppercase">Trabajos Recientes</span>
      </span>
      <Marquee client:load className="" speed="slow">
        {
          items.map((item, i) => (
            <li>
              <Image
                class="max-w-full rounded-lg border border-b-0 flex-shrink-0 border-slate-700"
                src={item.src}
                alt={item.alt}
                width={item.width}
                height={item.height}
              />
            </li>
          ))
        }
      </Marquee>
      <button
        class="font-semibold border w-fit border-white py-3 px-6 rounded-md hover:bg-white/10 transition-colors duration-200 ease-in-out"
      >
        {i18n.homepage.viewRecentWork}
      </button>
    </section>
  </main>
</Layout>
